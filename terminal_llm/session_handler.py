# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_session_handler.ipynb.

# %% auto 0
__all__ = ['SessionHandler']

# %% ../nbs/02_session_handler.ipynb 3
from fastcore.all import *
class SessionHandler():
  def __init__(self): pass
  
  def start_app(self):
    print('Starting app...')
    # TODO: Implement loading animation.
    
    if Path('.storage').exists():
      self.read_api_key()
      self.read_model()
    else:
      Path('.storage').mkdir()
      self.set_api_key()
      self.set_model()

    print('No errors found. Starting menu...')

  def read_model(self):
      try: self.model = self.read_file('.storage/model.txt')
      except FileNotFoundError: 
        print('Model not found.')
        self.set_model()

  def read_api_key(self):
      try: self.api_key = self.read_file('.storage/api_key.txt')
      except FileNotFoundError: 
        print("API key not found.")
        self.set_api_key()

  def set_model(self):
      # TODO: Add a check to see whether entered model exists.
      self.model = input('Enter Model: ')
      self.write_file('.storage/model.txt', self.model)
      print('Model saved.')

  def set_api_key(self):
      # TODO: Add a check to see whether entered API key is valid.
      self.api_key = input('Enter API Key: ')
      self.write_file('.storage/api_key.txt', self.api_key)
      print('API key saved.')

  def read_file(self, f_path):
    with open(f_path, 'r') as f: return f.read()
  
  def write_file(self, f_path, content):
    with open(f_path, 'w') as f: f.write(content)
  
  
